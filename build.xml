<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2012 Christopher Peisert. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project name="closure-ant" basedir="." default="build">
  
  <!--
  ==============================================================================
    Inputs to the build process.
  ==============================================================================
  -->

  <property name="src.dir" value="${basedir}/src" />
  <property name="lib.dir" value="${basedir}/lib" />
  <property name="resources.dir" value="${basedir}/resources" />
  <property name="test.dir" value="${basedir}/test" />
  <property name="closure-ant-config.xml"
      value="${resources.dir}/closure-ant-config.xml" />
                             
  <path id="classpath">
    <fileset dir="${basedir}" includes="**/*.jar" />
  </path>

  <property name="ivy-revision" value="2.3.0-rc1" />
  <property name="ivy.jar" value="ivy-${ivy-revision}.jar" />
  <available file="${lib.dir}/${ivy.jar}" property="ivy.jar.present" />

  <!-- Import Apache Ivy Ant tasks. -->
  <taskdef resource="org/apache/ivy/ant/antlib.xml"
      classpath="${lib.dir}/${ivy.jar}" />

  <!--
    Test for presence of Jakarta BCEL library in user's home directory under
    .ant/lib, which is required to use ClassFileSet.
  -->
  <fileset id="bcel.jar.id" dir="${basedir}" includes="lib/bcel*.jar" />
  <property name="bcel.jar" refid="bcel.jar.id" />
  <available file="${user.home}/.ant/${bcel.jar}" property="bcel.lib.present" />

  <!--
  ==============================================================================
    Outputs from the build process.
  ==============================================================================
  -->

  <property name="build.dir" location="${basedir}/build" />
  <property name="classes.dir" location="${build.dir}/classes" />

  <property name="builderplus.jar" location="${build.dir}/builderplus.jar" />
  <property name="closure-ant.jar" location="${build.dir}/closure-ant.jar" />
  <property name="closure-ant-no-templates.jar"
      location="${build.dir}/closure-ant-no-templates.jar" />
  <property name="closure-ant-no-deps.jar"
      location="${build.dir}/closure-ant-no-deps.jar" />

  <property name="javadoc.dir" value="${build.dir}/javadoc" />

  <!--
    To release a new stable version of Closure Ant execute the "release" target.
    To build the jar for a previous release, verify the release tag by
    running:

        git tag

    Checkout the desired revision:

        git checkout <tag name>

    Execute the "release" target and pass the argument:

        -Drelease.stamp=<tag name>
  -->
  <tstamp>
    <format property="release.stamp" pattern="yyyyMMdd" />
  </tstamp>


  <!--
  ==============================================================================
    TARGETS
  ==============================================================================
  -->

  <target name="init">

    <antcall target="bootstrap-ivy" />
    <antcall target="bootstrap-jakarta-bcel" />

    <!-- Use Apache Ivy to retrieve dependencies. -->
    <retrieve />

    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
    <copy file="${closure-ant-config.xml}" todir="${build.dir}" />

    <tstamp>
      <format property="YEAR" pattern="yyyy" />
      <format property="DATE_TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
    <manifest file="${build.dir}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Built-Date" value="${DATE_TODAY}" />
      <attribute name="Release" value="${release.stamp}" />
    </manifest>
    <manifest file="${build.dir}/BUILDER_PLUS_MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Built-Date" value="${DATE_TODAY}" />
      <attribute name="Main-Class"
          value="org.closureant.builderplus.cli.Main" />
      <attribute name="Release" value="${release.stamp}" />
    </manifest>

    <!--
      Define properties for library dependencies after Apache Ivy retrieves
      any missing dependencies.
    -->

    <!-- Library dependencies. -->
    <fileset id="ant.jar.id" dir="${basedir}" includes="lib/ant-1*.jar" />
    <property name="ant.jar" refid="ant.jar.id" />
    <fileset id="ant-launcher.id" dir="${basedir}"
        includes="lib/ant-launcher*.jar" />
    <property name="ant-launcher.jar" refid="ant-launcher.id" />
    <fileset id="args4j.jar.id" dir="${basedir}" includes="lib/args4j*.jar" />
    <property name="args4j.jar" refid="args4j.jar.id" />
    <fileset id="closure-stylesheets.jar.id" dir="${basedir}"
        includes="lib/closure-stylesheets*.jar" />
    <property name="closure-stylesheets.jar" refid="closure-stylesheets.jar.id" />
    <fileset id="gson.jar.id" dir="${basedir}" includes="lib/gson*.jar" />
    <property name="gson.jar" refid="gson.jar.id" />
    <fileset id="guava.jar.id" dir="${basedir}" includes="lib/guava*.jar" />
    <property name="guava.jar" refid="guava.jar.id" />
    <fileset id="jsr305.jar.id" dir="${basedir}" includes="lib/jsr305*.jar" />
    <property name="jsr305.jar" refid="jsr305.jar.id" />

    <!-- Library dependencies for Closure Templates. -->
    <fileset id="aopalliance.jar.id" dir="${basedir}"
        includes="lib/aopalliance*.jar" />
    <property name="aopalliance.jar" refid="aopalliance.jar.id" />
    <fileset id="guice.jar.id" dir="${basedir}" includes="lib/guice-3*.jar" />
    <property name="guice.jar" refid="guice.jar.id" />
    <fileset id="guice-assistedinject.jar.id" dir="${basedir}"
        includes="lib/guice-assistedinject*.jar" />
    <property name="guice-assistedinject.jar" refid="guice-assistedinject.jar.id"/>
    <fileset id="guice-multibindings.jar.id" dir="${basedir}"
        includes="lib/guice-multibindings*.jar" />
    <property name="guice-multibindings.jar" refid="guice-multibindings.jar.id" />
    <fileset id="icu4j.jar.id" dir="${basedir}" includes="lib/icu4j*.jar" />
    <property name="icu4j.jar" refid="icu4j.jar.id" />
    <fileset id="javax.inject.jar.id" dir="${basedir}"
        includes="lib/javax.inject*.jar" />
    <property name="javax.inject.jar" refid="javax.inject.jar.id" />
    <fileset id="soy.jar.id" dir="${basedir}"
        includes="lib/soy-excluding-deps*.jar" />
    <property name="soy.jar" refid="soy.jar.id" />

    <!--
      Extract library jars into the classes directory so that ClassFileSet can
      select only the required class files from each library.
    -->
    <unjar dest="${classes.dir}" src="${ant.jar}" failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${ant-launcher.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${args4j.jar}" failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${closure-stylesheets.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${gson.jar}" failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${guava.jar}" failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${jsr305.jar}" failonemptyarchive="true" />

    <!-- Library dependencies for Closure Templates. -->
    <unjar dest="${classes.dir}" src="${aopalliance.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${guice.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${guice-assistedinject.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${guice-multibindings.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${icu4j.jar}" failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${javax.inject.jar}"
        failonemptyarchive="true" />
    <unjar dest="${classes.dir}" src="${soy.jar}" failonemptyarchive="true" />
  </target>


  <!-- Downloads Apache Ivy to the lib directory. -->
  <target name="bootstrap-ivy" unless="ivy.jar.present">
    <echo message="Adding Apache Ivy jar file to ${lib.dir}." />
    <get dest="${lib.dir}/${ivy.jar}"
        src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/${ivy-revision}/${ivy.jar}" />
    <fail message="Please rerun the Ant build now that Ivy has been downloaded." />
  </target>


  <target name="bootstrap-jakarta-bcel" unless="bcel.lib.present">
    <mkdir dir="${user.home}/.ant/lib" />
    <copy file="${bcel.jar}" todir="${user.home}/.ant/lib" />
    <fail message="The Jakarta-BCEL library (which is required to create the
Closure Ant jar file) was just copied to your home directory under .ant/lib.
Run the Ant build again now that the library is available on Ant's classpath." />
  </target>


  <target name="clean" description="Deletes all files created by this script.">
    <delete dir="${build.dir}" />
  </target>


  <target name="deep-clean" depends="clean"
      description="Deletes all files created by this script and clears the
Apache Ivy cache.">
    <cleancache />
  </target>


  <target name="compile" depends="init" description="Compiles the Java source.">
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
        classpathref="classpath" debug="on" deprecation="on"
        includeantruntime="false"
        source="1.6" target="1.6">
      <compilerarg value="-Xlint" />
    </javac>
  </target>


  <classfileset id="closureant-dependencies" dir="${classes.dir}">
    <rootfileset dir="${classes.dir}" includes="org/closureant/*.class" />
    <!-- Include all Guice classes. -->
    <rootfileset dir="${classes.dir}"
        includes="com/google/inject/**/*.class" />
  </classfileset>


  <target name="jar" depends="compile" description=
      "Creates a standalone jar of all Java class files and dependencies.">
    <jar destfile="${closure-ant.jar}" update="true"
        manifest="${build.dir}/MANIFEST.MF">
      <fileset refid="closureant-dependencies" />
      <fileset dir="${classes.dir}">
        <include name="**/*.properties" />
        <include name="**/*.txt" />
        <include name="**/*.xml" />
      </fileset>
      <fileset dir="${resources.dir}">
        <include name="soyutils*.js" />
        <include name="task-definitions.xml" />
      </fileset>
    </jar>
  </target>


  <classfileset id="closureant-deps-no-templates" dir="${classes.dir}">
    <rootfileset dir="${classes.dir}" includes="org/closureant/*.class"
        excludes="org/closureant/ClosureTemplates.class" />
  </classfileset>


  <target name="jar-no-templates" depends="compile"
      description="Creates a standalone jar excluding Java class files and
dependencies related to Closure Templates.&#13;&#10;">
    <copy file="${resources.dir}/task-definitions-no-templates.xml"
        tofile="${build.dir}/task-definitions.xml" />
    <jar destfile="${closure-ant-no-templates.jar}" update="true"
        manifest="${build.dir}/MANIFEST.MF">
      <fileset refid="closureant-deps-no-templates" />
      <fileset dir="${classes.dir}">
        <include name="**/*.properties" />
        <include name="**/*.txt" />
        <include name="**/*.xml" />
      </fileset>
      <fileset dir="${build.dir}">
        <include name="task-definitions.xml" />
      </fileset>
    </jar>
  </target>


  <target name="jar-no-deps" depends="compile"
      description="Creates a non-standalone jar excluding dependencies (i.e.
no Ant, Closure Stylesheets, Closure Templates, Gson, or Guava classes).
&#13;&#10;">
    <jar destfile="${closure-ant-no-deps.jar}"
        update="false" manifest="${build.dir}/MANIFEST.MF">
      <fileset dir="${classes.dir}" includes="org/closureant/**/*.class" />
      <fileset dir="${resources.dir}">
        <include name="task-definitions.xml" />
      </fileset>
    </jar>
  </target>


  <classfileset id="builderplus-dependencies" dir="${classes.dir}">
    <rootfileset dir="${classes.dir}"
        includes="org/closureant/BuilderPlus.class" />
    <rootfileset dir="${classes.dir}"
        includes="org/closureant/builderplus/cli/*.class" />
  </classfileset>


  <target name="builder-plus-jar" depends="compile"
      description="Creates a standalone executable builderplus.jar">
    <jar destfile="${builderplus.jar}" update="true"
        manifest="${build.dir}/BUILDER_PLUS_MANIFEST.MF">
      <fileset refid="builderplus-dependencies" />
      <fileset dir="${classes.dir}">
        <include name="**/*.properties" />
        <include name="**/*.txt" />
        <include name="**/*.xml" />
      </fileset>
      <fileset dir="${resources.dir}">
        <include name="soyutils*.js" />
      </fileset>
    </jar>
  </target>
  
  
  <target name="build" depends="jar, builder-plus-jar"
      description="Creates standalone closure-ant.jar and builderplus.jar." />


  <target name="build-all"
      depends="jar, jar-no-templates, jar-no-deps, builder-plus-jar"
      description="Creates all jar files defined in this script." />
  

  <target name="javadoc"
      description="Generates complete javadoc.">
    <mkdir dir="${javadoc.dir}" />
    <tstamp>
      <format property="YEAR" pattern="yyyy" />
    </tstamp>
    <javadoc
        sourcepath="${src.dir}"
        additionalparam="-notimestamp"
        destdir="${javadoc.dir}"
        author="false"
        windowtitle="Closure Ant"
        classpathref="classpath"
        doctitle="Closure Ant">
      <link href="http://docs.oracle.com/javase/7/docs/api/" />
      <link href=
          "http://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/" />
      <link href="http://docs.guava-libraries.googlecode.com/git/javadoc/" />
      <link href="http://evgeny-goldin.org/javadoc/ant/api/" />
      <bottom>
        <![CDATA[
        <div id="copyright" style="float:left">
          <p>Copyright (C) 2012-${YEAR}, Christopher Peisert</p>
        </div>
        ]]>
      </bottom>
    </javadoc>
  </target>

  
  <target name="release" depends="jar, javadoc"
      description="Creates standalone closure-ant-&lt;release.stamp>.jar and
generates JavaDoc.">
    <move file="${closure-ant.jar}"
        tofile="${build.dir}/closure-ant-${release.stamp}.jar" />
    <move file="${builderplus.jar}"
        tofile="${build.dir}/builderplus-${release.stamp}.jar" />
  </target>
  
  
  <target name="test" depends="build"
      description="Runs all the JUnit and AntUnit tests.">
    <ant dir="${test.dir}" target="clean" inheritAll="false" />
    <ant dir="${test.dir}" target="test" inheritAll="false" />
  </target>


<!--
==============================================================================
  Hidden target to build a plovr jar including only Config and ConfigOption
  and their dependencies (however, all Closure Templates deps and Closure
  Compiler debugging deps are excluded). This stripped-down jar is used to
  automatically generate documentation mapping the plovr config options to the
  corresponding plovr Ant task attributes and nested elements.
==============================================================================
-->
  <!-- Change plovr.dir to point to your local copy of the plovr source code.-->
  <property name="plovr.dir" location="/usr/local/closure-tools/plovr" />

  <property name="plovr.classes.dir" location="${plovr.dir}/build/classes" />
  <property name="plovr-config.jar" location="${lib.dir}/plovr-config.jar" />

  <target name="plovr-config-jar">
    <manifest file="${build.dir}/PLOVR_CONFIG_MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Built-Date" value="${DATE_TODAY}" />
      <attribute name="Main-Class"
          value="org.closureant.builderplus.cli.Main" />
      <attribute name="Release" value="${release.stamp}" />
    </manifest>

    <ant dir="${plovr.dir}" target="compile" inheritAll="false"
        useNativeBasedir="true" />

    <classfileset id="plovr-config-deps" dir="${plovr.classes.dir}"
        excludes="**/google/template/**,**/google/debugging/**">
      <rootfileset dir="${plovr.classes.dir}"
          includes="org/plovr/Config.class" />
      <rootfileset dir="${plovr.classes.dir}"
          includes="org/plovr/ConfigOption.class" />
    </classfileset>

    <jar destfile="${plovr-config.jar}" update="true">
      <fileset refid="plovr-config-deps" />
    </jar>
  </target>
</project>
