<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2012 Christopher Peisert. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!--
================================================================================
  AntUnit tests for Closure Builder.
================================================================================
-->
<project name="closure-builder-python-test" default="test">

  <dirname property="antunit.dir" 
      file="${ant.file.closure-builder-python-test}" />

  <property name="test.dir" location="${antunit.dir}/.." />
  <property name="test-projects.dir" location="${test.dir}/test_projects" />
  <property name="test.build.dir" location="${test.dir}/build" />
  <property name="test.lib.dir" location="${test.dir}/lib" />
  <import file="${test.lib.dir}/antunit.xml" />

  <property name="closure-ant-tasks.dir" location="${test.dir}/.." />
  <property name="closure-ant-tasks.lib.dir" location="${closure-ant-tasks.dir}/lib" />
  <property name="closure-ant-tasks.build.dir"
      location="${closure-ant-tasks.dir}/build" />
  <property name="closure-tools-config.xml"
      location="${closure-ant-tasks.build.dir}/closure-tools-config.xml" />
  <import file="${closure-tools-config.xml}" />

  <path id="test.classpath">
    <fileset dir="${closure-ant-tasks.lib.dir}" includes="**/*.jar" />
    <fileset dir="${test.lib.dir}" includes="**/*.jar" />
  </path>

  <import file="${test.dir}/test_projects/project101/project101.xml" />

  
  <!--
  =============================================================================
    Set up and tear down
  =============================================================================
  -->

  <!-- Executed once for this test suite before all other targets. -->
  <target name="suiteSetUp">
    <mkdir dir="${test.build.dir}" />
    <mkdir dir="${project101.output.dir}" />
  </target>


  <!--
  =============================================================================
    Tests
  =============================================================================
  -->

  <target name="test--output_mode=raw">
    <closure-builder-python outputMode="raw"
        outputfile="${project101.raw.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
    </closure-builder-python>

    <assertFileExists file="${project101.raw.output.js}" />
    <assertResourceContains resource="${project101.raw.output.js}"
        value="project101.displayMessage = function(message)" />
  </target>


  <target name="test_whitespace-compiled">
    <closure-builder-python outputMode="compiled" forceRecompile="true"
        outputFile="${project101.whitespace-compiled.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
      <compiler compilationLevel="WHITESPACE" prettyPrint="true">
      </compiler>
    </closure-builder-python>

    <assertFileExists file="${project101.whitespace-compiled.output.js}" />
    <assertResourceContains
        resource="${project101.whitespace-compiled.output.js}"
        value="var COMPILED = false;" />
  </target>

  
  <target name="test_simple-compiled">
    <closure-builder-python outputMode="compiled" forceRecompile="true"
        outputFile="${project101.simple-compiled.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
      <compiler compilationLevel="SIMPLE" prettyPrint="true">
        <define name="goog.DEBUG" value="false" type="boolean" />
        <define name="goog.LOCALE" value="de" type="string" />
        <compilercheck name="checkVars" value="WARNING" />
        <flag name="--logging_level" value="INFO" />
      </compiler>
    </closure-builder-python>

    <assertFileExists file="${project101.simple-compiled.output.js}" />

    <!-- Test "define": goog.DEBUG = false -->
    <assertResourceContains
        resource="${project101.simple-compiled.output.js}"
        value="goog.DEBUG = !1" />

    <!-- Test "define": goog.LOCALE = "de" -->
    <assertResourceContains
        resource="${project101.simple-compiled.output.js}"
        value='goog.LOCALE = "de"' />
  </target>

  
  <target name="test_advanced-compiled">
    <closure-builder-python outputMode="compiled" forceRecompile="true"
        outputFile="${project101.advanced-compiled.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
      <compiler compilationLevel="advanced" />
    </closure-builder-python>

    <assertFileExists file="${project101.advanced-compiled.output.js}" />
  </target>
  
  
  <target name="test_outputManifest">
    <property name="base.js"
        location="${closure-library.dir}/closure/goog/base.js" />

    <closure-builder-python outputMode="raw"
        outputManifest="${project101.outputManifest}"
        outputFile="${project101.raw.output.js}">
      <inputs dir="${project101.js.dir}" includes="**/*.js" />
      <root directory="${closure-library.dir}" />
    </closure-builder-python>

    <assertFileExists file="${project101.outputManifest}" />

    <pathconvert property="base.js_current-platform">
      <fileset file="${base.js}" />
    </pathconvert>
    <assertResourceContains resource="${project101.outputManifest}"
        value="${base.js_current-platform}" />
    <assertResourceContains resource="${project101.outputManifest}"
        value="project101.js" />
  </target>


  <target name="test_skipCompilationIfOutputFileUpToDate">
    <logcapturer />
    <closure-builder-python outputMode="compiled"
        outputFile="${project101.whitespace-compiled.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
      <compiler compilationLevel="WHITESPACE" prettyPrint="true" />
    </closure-builder-python>

    <!-- Compilation should be skipped. -->
    <closure-builder-python outputMode="compiled"
        outputFile="${project101.whitespace-compiled.output.js}">
      <namespace value="${project101.namespace}" />
      <root directory="${project101.js.dir}" />
      <root directory="${closure-library.dir}" />
      <compiler compilationLevel="WHITESPACE" prettyPrint="true" />
    </closure-builder-python>

    <assertLogContains text="Output file up-to-date. Compilation skipped." />
  </target>
  
  <!-- Run this test suite. -->
  <target name="test">
    <antunit>
      <file file="${antunit.dir}/ClosureBuilderPythonTest.xml" />
      <plainlistener loglevel="info" />
    </antunit>
  </target>
</project>