{namespace html5 autoescape="contextual"}

/**
 * HTML5 document template.
 *
 * @param? title The page title. Defaults to "HTML5 Template".
 * @param? language The page language. Defaults to "en" (English).
 * @param? description The page description. Defaults to "HTML5 Template".
 * @param? charset The character set. Defaults to UTF-8.
 * @param? cssFiles A list of css files, where each list element is either
 *     a URL or a map with the following structure (only the href entry is required):
 *     [href: <css-file-url>, rel: <relationship>, title: <title>, media: <media-descriptor>]
 * @param? scriptFiles A list of script files, where each list element is
 *     either a URL or a map with the following structure (only the src entry is required):
 *     [src: <script-file-url>, type: <MIME_type>, charset: <character_set>,  async: "async",
 *    defer: "defer"]
 * @param? contentHtml html content that goes inside the <body> tags
 * @param? noScriptHtml html content that goes inside <noscript> tags
 */
{template .createDocument}
<!doctype html>
<html lang="{$language ? $language : 'en'}">
<head>
  <meta charset="{$charset ? $charset : 'utf-8'}">
  <title>{$title ? $title : 'HTML5 Template'}</title>
  <meta name="description" content="{$description ? $description :
      'HTML5 Template'}">
  {if $cssFiles}
    {call .linkCssFiles data="all" /}
  {/if}
</head>
<body>
  {if $noScriptHtml}
    <noscript>{$noScriptHtml|noAutoescape}</noscript>
  {/if}
  {if $contentHtml}
    {$contentHtml|noAutoescape}
  {/if}
  {if $scriptFiles}
    {call .importScriptFiles data="all" /}
  {/if}
</body>
</html>
{/template}

/**
 * Given a list of external stylesheets, add <link> tags for each stylesheet.
 * Each list element is either a URL or a map with the following structure
 * (only the href entry is required):
 *
 *   [href: <css-file-url>, rel: <relationship>, title: <title>, media: <media-descriptor>]
 *
 * @param cssFiles A list of stylesheets.
 */
{template .linkCssFiles private="true"}
{foreach $cssFile in $cssFiles}
  {if not $cssFile.href}
    <link href="{$cssFile}" rel="stylesheet" type="text/css" />
  {else}
    <link
    href="{$cssFile.href}"
    rel="{$cssFile.rel ? $cssFile.rel : 'stylesheet'}"
    {if $cssFile.title}
      title="{$cssFile.title}"
    {/if}
    media="{$cssFile.media ? $cssFile.media : 'all'}"
    type="text/css" />
  {/if}
{/foreach}
{/template}

/**
 * Given a list of external scripts, add <script> tags for each script file.
 * Each list element is either a URL or a map with the following structure
 * (only the src entry is required):
 *
 *   [src: <script-file-url>, type: <MIME_type>, charset: <character_set>,
 *       async: "async", defer: "defer"]
 *
 * @param scriptFiles A list of scripts.
 */
{template .importScriptFiles private="true"}
{foreach $scriptFile in $scriptFiles}
  {if not $scriptFile.src}
    <script src="{$scriptFile}" type="text/javascript"></script>
  {else}
    <script
    src="{$scriptFile.src}"
    type="{$scriptFile.type ? $scriptFile.type : 'text/javascript'}"
    {if $scriptFile.charset}
      charset="{$scriptFile.charset}"
    {/if}
    {if $scriptFile.async}
      async="async"
    {/if}
    {if $scriptFile.defer}
      defer="defer"
    {/if}
    ></script>
  {/if}
{/foreach}
{/template}